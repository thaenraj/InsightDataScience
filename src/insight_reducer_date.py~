#! /usr/bin/env python 

import sys 
import math 
import csv 
import datetime
from itertools import groupby
from operator import itemgetter

current_key = None	
current_zip = None

def find_median(list): 
	sorted_list = sorted (list) 
	''' since middle is the list index it should be int value '''
	middle  = len(sorted_list) // 2 
	if len(sorted_list) % 2  == 0 : 
		median = round(sum(sorted_list [middle -1 : middle + 1] ) /2.0,0) 
	else : 
		 median  = round(sorted_list [middle],0 )
	'''print ('inside the find_median')'''
	return median 


class reducer_process (object) :
		def __init__(self,stream):
			self.stream = stream 
			self.current_key  = None 
			self.current_date  = None 
		def make_output (self,key,transactiondate,amt_list) :
			'''print ('\n output' + cmteid,transactiondate,transactionamount)'''
			total = len(amt_list)
			total_amount =   sum(amt_list)
			median =  find_median(amt_list) 
			sys.stdout.write("{0}|{1}|{2}|{3}|{4}\n".format(str(key), str(transactiondate), str(median), str(total),str(total_amount)))    
		def make_reducer (self) :
			amt_list = [] 
			grouper = itemgetter(0, 1) 
			''' group by keys and sort the grouped items '''
			for key_values, group in groupby(sorted(self),grouper):				
				for item in group:      
						''' new entry ''' 
						key =  item[0]
						transactiondate =  item[1]
						transactionamt  = item[2]
						if ( key != self.current_key ) :
								'''print ('new key are ' + key,transactiondate,key_values[0],key_values[1]) '''
								'''print (key,transactiondate,transactionamt) '''
								amt_list.append(float(item[2]))                
								self.make_output(key, transactiondate,amt_list) 
						else :
								self.current_key = key 
								self.current_date = transactiondate
		
				self.current_key = None	
				self.current_date = None
				amt_list  = [] 

		def __iter__(self) : 
				for line in self.stream:  
					sp = line[:-1].split("|")
					key = sp[0]
					transactiondate = sp[1]
					transactionamt = sp[2]
					yield key, transactiondate , float(transactionamt)  	
					

if __name__ == '__main__':    
	insightreducer = reducer_process(sys.stdin)
	insightreducer.make_reducer()		
				

